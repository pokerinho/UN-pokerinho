/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import businessLogic.MoveHandler;
import data.Card;
import data.Player;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author wilder-eb
 */
public class GUI extends javax.swing.JFrame implements UI {

    private String defaultInfoMessage = "BIENVENIDO A UN POKERINHO";
    private String playerName = "";
    private int selectedMenuOption;
    private int betAmount;
    private boolean changed;
    private int[] rejected = new int[5];
    private JToggleButton[] handUI;
    
    public GUI() {
        try {

            initComponents();
            
            
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            SwingUtilities.updateComponentTreeUI(this);
            
            this.pack();
            this.setVisible(false);
            
            handUI  = new JToggleButton[]{bCard1, bCard2, bCard3, bCard4, bCard5};
            
        }
         catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException exception) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, exception);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dPlayerName = new javax.swing.JDialog();
        pPlayerName = new javax.swing.JPanel();
        tInputName = new javax.swing.JTextField();
        bSetName = new javax.swing.JButton();
        lWelcome = new javax.swing.JLabel();
        pGame = new javax.swing.JPanel();
        pBet = new javax.swing.JPanel();
        bBet = new javax.swing.JButton();
        lBetMessage = new javax.swing.JLabel();
        sBetAmount = new javax.swing.JSpinner();
        pPlayer = new javax.swing.JPanel();
        lPlayerName = new javax.swing.JLabel();
        lCredits = new javax.swing.JLabel();
        lCreditsIcon = new javax.swing.JLabel();
        pHand = new javax.swing.JPanel();
        bCard1 = new javax.swing.JToggleButton();
        bCard2 = new javax.swing.JToggleButton();
        bCard3 = new javax.swing.JToggleButton();
        bCard4 = new javax.swing.JToggleButton();
        bCard5 = new javax.swing.JToggleButton();
        bRejectCards = new javax.swing.JButton();
        linfoMessage = new javax.swing.JLabel();
        pMenu = new javax.swing.JPanel();
        bNewGame = new javax.swing.JButton();
        bExit = new javax.swing.JButton();
        mMenu = new javax.swing.JMenuBar();
        mFile = new javax.swing.JMenu();
        mNewGame = new javax.swing.JMenuItem();
        mLoadState = new javax.swing.JMenuItem();
        mSaveState = new javax.swing.JMenuItem();
        mExit = new javax.swing.JMenuItem();
        mHelp = new javax.swing.JMenu();
        mInstructions = new javax.swing.JMenuItem();

        dPlayerName.setAlwaysOnTop(true);
        dPlayerName.setResizable(false);
        dPlayerName.setSize(new java.awt.Dimension(398, 200));

        pPlayerName.setBackground(new java.awt.Color(51, 102, 255));

        tInputName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tInputName.setText("Â¿Cual es tu nombre?");
        tInputName.setToolTipText("");

        bSetName.setText("Iniciar");
        bSetName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSetNameActionPerformed(evt);
            }
        });

        lWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lWelcome.setText("BIENVENIDO A UN POKERINHO");

        javax.swing.GroupLayout pPlayerNameLayout = new javax.swing.GroupLayout(pPlayerName);
        pPlayerName.setLayout(pPlayerNameLayout);
        pPlayerNameLayout.setHorizontalGroup(
            pPlayerNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPlayerNameLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(bSetName)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pPlayerNameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(pPlayerNameLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(tInputName, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        pPlayerNameLayout.setVerticalGroup(
            pPlayerNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPlayerNameLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(lWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tInputName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bSetName)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout dPlayerNameLayout = new javax.swing.GroupLayout(dPlayerName.getContentPane());
        dPlayerName.getContentPane().setLayout(dPlayerNameLayout);
        dPlayerNameLayout.setHorizontalGroup(
            dPlayerNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pPlayerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dPlayerNameLayout.setVerticalGroup(
            dPlayerNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pPlayerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UN-Pokerinho");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(820, 630));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setSize(new java.awt.Dimension(800, 600));

        pGame.setBackground(new java.awt.Color(153, 153, 153));

        pBet.setBackground(new java.awt.Color(255, 51, 102));
        pBet.setPreferredSize(new java.awt.Dimension(384, 105));

        bBet.setText("Apostar");
        bBet.setEnabled(false);
        bBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBetActionPerformed(evt);
            }
        });

        lBetMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lBetMessage.setText("Apuesta");
        lBetMessage.setEnabled(false);
        lBetMessage.setOpaque(true);

        sBetAmount.setModel(new javax.swing.SpinnerNumberModel(10, 10, null, 10));
        sBetAmount.setEnabled(false);

        javax.swing.GroupLayout pBetLayout = new javax.swing.GroupLayout(pBet);
        pBet.setLayout(pBetLayout);
        pBetLayout.setHorizontalGroup(
            pBetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBetLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lBetMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(sBetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bBet, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        pBetLayout.setVerticalGroup(
            pBetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pBetLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(pBetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBet, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lBetMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sBetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pPlayer.setBackground(new java.awt.Color(255, 51, 102));

        lPlayerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lPlayerName.setText("Jugador");
        lPlayerName.setOpaque(true);

        lCredits.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lCredits.setText("100");
        lCredits.setOpaque(true);

        lCreditsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/Coin.png"))); // NOI18N
        lCreditsIcon.setOpaque(true);

        javax.swing.GroupLayout pPlayerLayout = new javax.swing.GroupLayout(pPlayer);
        pPlayer.setLayout(pPlayerLayout);
        pPlayerLayout.setHorizontalGroup(
            pPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pPlayerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(lCreditsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        pPlayerLayout.setVerticalGroup(
            pPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pPlayerLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(pPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lCredits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lCreditsIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lPlayerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        pHand.setBackground(new java.awt.Color(51, 102, 255));
        pHand.setToolTipText("");

        bCard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/back/back_d.png"))); // NOI18N
        bCard1.setEnabled(false);

        bCard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/back/back_d.png"))); // NOI18N
        bCard2.setEnabled(false);

        bCard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/back/back_d.png"))); // NOI18N
        bCard3.setEnabled(false);

        bCard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/back/back_d.png"))); // NOI18N
        bCard4.setEnabled(false);

        bCard5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/back/back_d.png"))); // NOI18N
        bCard5.setEnabled(false);

        bRejectCards.setText("Cambiar");
        bRejectCards.setEnabled(false);
        bRejectCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRejectCardsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pHandLayout = new javax.swing.GroupLayout(pHand);
        pHand.setLayout(pHandLayout);
        pHandLayout.setHorizontalGroup(
            pHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pHandLayout.createSequentialGroup()
                .addGroup(pHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pHandLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(bCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pHandLayout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(bRejectCards)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pHandLayout.setVerticalGroup(
            pHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pHandLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(bRejectCards, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        linfoMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linfoMessage.setText("Bienvenido");
        linfoMessage.setMaximumSize(new java.awt.Dimension(800, 25));
        linfoMessage.setMinimumSize(new java.awt.Dimension(800, 25));
        linfoMessage.setOpaque(true);
        linfoMessage.setPreferredSize(new java.awt.Dimension(800, 25));

        pMenu.setBackground(new java.awt.Color(255, 51, 102));

        bNewGame.setText("Nueva partida");
        bNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewGameActionPerformed(evt);
            }
        });

        bExit.setText("Salir");
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pMenuLayout = new javax.swing.GroupLayout(pMenu);
        pMenu.setLayout(pMenuLayout);
        pMenuLayout.setHorizontalGroup(
            pMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMenuLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(bNewGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        pMenuLayout.setVerticalGroup(
            pMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pMenuLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(pMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout pGameLayout = new javax.swing.GroupLayout(pGame);
        pGame.setLayout(pGameLayout);
        pGameLayout.setHorizontalGroup(
            pGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pGameLayout.createSequentialGroup()
                .addComponent(linfoMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pGameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pGameLayout.createSequentialGroup()
                        .addComponent(pBet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pHand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pGameLayout.setVerticalGroup(
            pGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pGameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pBet, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(pMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linfoMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mFile.setText("Archivo");

        mNewGame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mNewGame.setText("Nueva partida");
        mNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mNewGameActionPerformed(evt);
            }
        });
        mFile.add(mNewGame);

        mLoadState.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        mLoadState.setText("Cargar estado");
        mLoadState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mLoadStateActionPerformed(evt);
            }
        });
        mFile.add(mLoadState);

        mSaveState.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mSaveState.setText("Guardar estado");
        mSaveState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveStateActionPerformed(evt);
            }
        });
        mFile.add(mSaveState);

        mExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        mExit.setText("Salir");
        mExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mExitActionPerformed(evt);
            }
        });
        mFile.add(mExit);

        mMenu.add(mFile);

        mHelp.setText("Ayuda");

        mInstructions.setText("Instrucciones");
        mInstructions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mInstructionsActionPerformed(evt);
            }
        });
        mHelp.add(mInstructions);

        mMenu.add(mHelp);

        setJMenuBar(mMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mSaveStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveStateActionPerformed
        selectedMenuOption = 3;
    }//GEN-LAST:event_mSaveStateActionPerformed

    private void bSetNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSetNameActionPerformed
        playerName = tInputName.getText();
    }//GEN-LAST:event_bSetNameActionPerformed

    private void bNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewGameActionPerformed
        mNewGameActionPerformed(evt);
    }//GEN-LAST:event_bNewGameActionPerformed

    private void mExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mExitActionPerformed
        selectedMenuOption = 0;
    }//GEN-LAST:event_mExitActionPerformed

    private void mNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNewGameActionPerformed
        selectedMenuOption = 1;
    }//GEN-LAST:event_mNewGameActionPerformed

    private void mLoadStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mLoadStateActionPerformed
        selectedMenuOption = 4;
    }//GEN-LAST:event_mLoadStateActionPerformed

    private void mInstructionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mInstructionsActionPerformed
        selectedMenuOption = 2;
    }//GEN-LAST:event_mInstructionsActionPerformed

    private void bBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBetActionPerformed
        betAmount = (int) sBetAmount.getValue();
    }//GEN-LAST:event_bBetActionPerformed

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        mExitActionPerformed(evt);
    }//GEN-LAST:event_bExitActionPerformed

    private void bRejectCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRejectCardsActionPerformed
        for(int index = 0; index < handUI.length; index++){
            if(handUI[index].isSelected()){
                rejected[index] = index + 1;
            }
            handUI[index].setSelected(false);
        }
        changed = true;
    }//GEN-LAST:event_bRejectCardsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBet;
    private javax.swing.JToggleButton bCard1;
    private javax.swing.JToggleButton bCard2;
    private javax.swing.JToggleButton bCard3;
    private javax.swing.JToggleButton bCard4;
    private javax.swing.JToggleButton bCard5;
    private javax.swing.JButton bExit;
    private javax.swing.JButton bNewGame;
    private javax.swing.JButton bRejectCards;
    private javax.swing.JButton bSetName;
    private javax.swing.JDialog dPlayerName;
    private javax.swing.JLabel lBetMessage;
    private javax.swing.JLabel lCredits;
    private javax.swing.JLabel lCreditsIcon;
    private javax.swing.JLabel lPlayerName;
    private javax.swing.JLabel lWelcome;
    private javax.swing.JLabel linfoMessage;
    private javax.swing.JMenuItem mExit;
    private javax.swing.JMenu mFile;
    private javax.swing.JMenu mHelp;
    private javax.swing.JMenuItem mInstructions;
    private javax.swing.JMenuItem mLoadState;
    private javax.swing.JMenuBar mMenu;
    private javax.swing.JMenuItem mNewGame;
    private javax.swing.JMenuItem mSaveState;
    private javax.swing.JPanel pBet;
    private javax.swing.JPanel pGame;
    private javax.swing.JPanel pHand;
    private javax.swing.JPanel pMenu;
    private javax.swing.JPanel pPlayer;
    private javax.swing.JPanel pPlayerName;
    private javax.swing.JSpinner sBetAmount;
    private javax.swing.JTextField tInputName;
    // End of variables declaration//GEN-END:variables
    @Override
    public void printWelcome() {
        linfoMessage.setText(defaultInfoMessage);
    }

    @Override
    public void printMainMenu(Player player) {
        playerName = "";
        lPlayerName.setText(player.getPlayerName());
        lCredits.setText(String.valueOf(player.getCredits()));
        selectedMenuOption = -1;
    }

    @Override
    public void printInstructions() {
        JOptionPane.showMessageDialog(
                this,
                "1. Para ganar deberÃ¡s usar tu suerte tanto como puedas, comenzarÃ¡s con 5 cartas y deberÃ¡s hacer\n"
                        + "combinaciones de Ã©stas en dos oportunidades, podrÃ¡s cambiar en una ocasiÃ³n las cartas que quieras,\n"
                        + "para luego con las nuevas cartas multiplicar o perder tu apuesta.\n\n"
                        + "PodrÃ¡s hacer las siguientes combinaciones de cartas:\n"
                        + "Escalera Real: Escalera desde 10 hasta A de la misma pinta.\n"
                        + "Escalera de Color: Cualquier escalera de la misma pinta.\n"
                        + "PÃ³ker: Cuatro cartas del mismo nÃºmero.\n"
                        + "Full House: Un trÃ­o y un par.\n"
                        + "Color: Cinco cartas de la misma pinta.\n"
                        + "Escalera: Cualquier escalera de diferente pinta.\n"
                        + "TrÃ­o: Tres cartas del mismo nÃºmero.\n"
                        + "Dos Pares: Dos pares de nÃºmeros con diferentes pintas.\n"
                        + "Par: Dos cartas del mismo nÃºmero.\n"
                        + "Nada: Ninguna combinaciÃ³n anterior.\n\n"
                        + "2. ComenzarÃ¡s con 100 crÃ©ditos que podrÃ¡s apostar.\n"
                        + "Tu apuesta se multiplicarÃ¡ asÃ­:\n"
                        + "Escalera Real.................1-500\n"
                        + "Escalera de Color.............1-200\n"
                        + "PÃ³ker.........................1-100\n"
                        + "Full House....................1-50\n"
                        + "Color.........................1-20\n"
                        + "Escalera......................1-10\n"
                        + "TrÃ­o..........................1-3\n"
                        + "Dos Pares.....................1-2\n"
                        + "Par...........................1-1\n"
                        + "Nada..........................1-0\n\n"
                        + "Entre mÃ¡s crÃ©ditos tengas mejores premios podrÃ¡s redimir.",
                "Instrucciones",
                JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public void printCards(Player player) {
        changeHandState(true);
        for(int i = 0; i < player.getHand().size(); i++){
            Card card = player.getCard(i);
            handUI[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/cards/" + card.generateResourceName())));
        }
    }

    @Override
    public void printCredits(Player player) {
        lCredits.setText(String.valueOf(player.getCredits()));
    }

    @Override
    public void printCategorizeHand(Player player) {
        switch (MoveHandler.categorizeHand(player)) {
            case 5000:
                linfoMessage.setText("Â¡Tienes una Flor Imperial!");
                break;
            case 200:
                linfoMessage.setText("Â¡Tienes una Escalera de Color!");
                break;
            case 100:
                linfoMessage.setText("Â¡Tienes un PÃ³ker!");
                break;
            case 50:
                linfoMessage.setText("Â¡Tienes un Full House!");
                break;
            case 20:
                linfoMessage.setText("Â¡Tienes un Color!");
                break;
            case 10:
                linfoMessage.setText("Â¡Tienes una Escalera!");
                break;
            case 3:
                linfoMessage.setText("Â¡Tienes un TrÃ­o!");
                break;
            case 2:
                linfoMessage.setText("Â¡Tienes dos Pares!");
                break;
            case 1:
                linfoMessage.setText("Â¡Tienes un Par!");
                break;
            default:
                linfoMessage.setText("No tienes nada");
                break;
        }
        try {
            Thread.sleep(5000);
        } catch (InterruptedException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        changeHandState(false);
    }

    @Override
    public void printSaved() {
        JOptionPane.showMessageDialog(
                this,
                "Guardado",
                "estado",
                JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public void printLoaded() {
        JOptionPane.showMessageDialog(
                this,
                "Cargado",
                "Estado",
                JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public void printError(String error) {
        linfoMessage.setText(error);
    }

    @Override
    public String askName() {
        dPlayerName.setVisible(true);
        while(playerName.equals("")){
            pause();
        }
        dPlayerName.setVisible(false);
        this.setVisible(true);
        return playerName;
    }

    @Override
    public int askMenuOption() {
        linfoMessage.setText("Selecciona una opciÃ³n");
        while(selectedMenuOption == -1){
            pause();
        }
        return selectedMenuOption;
    }

    @Override
    public int askBetAmount(Player player) {
        linfoMessage.setText("Â¿CuÃ¡ntos crÃ©ditos quieres apostar?");
        changeLBetState(true);
        betAmount = 0;
        while(betAmount ==0){
            pause();
        }
        changeLBetState(false);
        return betAmount;
    }

    @Override
    public int[] askReject() {
        changed = false;
        for(int index = 0; index < rejected.length; index++){
            rejected[index] = 0;
        }
        while(!changed){
            pause();
        }
        return rejected;
    }

    @Override
    public boolean printGameOver() {
        return true;
    }
    
    private void changeHandState(boolean state){
        for (JToggleButton handUI1 : handUI) {
            handUI1.setEnabled(state);
        }
        bRejectCards.setEnabled(state);
    }
    
    private void changeLBetState(boolean state){
        lBetMessage.setEnabled(state);
        sBetAmount.setEnabled(state);
        bBet.setEnabled(state);
    }
    
    private void pause() {
        try {
            Thread.sleep(50);
        } catch (InterruptedException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
